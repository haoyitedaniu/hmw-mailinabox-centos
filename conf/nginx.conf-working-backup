# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  haymingway.com;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

     #   location / {
     #   }


  	location / {
                      try_files $uri $uri/ /index.php$is_args$args;
        }

  	location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm/www.sock;
            fastcgi_index index.php;
            include fastcgi.conf;
   	} 

       error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

	#redirect http://haymingway.com:80 --> https://haymingway.com:443
        return 301 https://haymingway.com$request_uri;
    }
    
    server {
        listen       80;
        listen       [::]:80;
        server_name  www.haymingway.com;
        root         /usr/share/nginx/html;

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

#        location / {
#        }

        location / {
                      try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm/www.sock;
            fastcgi_index index.php;
            include fastcgi.conf;
        }


        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

        #redirect http://www.haymingway.com:80 -->  https://www.haymingway.com:443
        return 301 https://$server_name$request_uri;
    }


# Settings for a TLS enabled server.

    server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  haymingway.com;
        root         /usr/share/nginx/html;
	#ssl that works for https://haymingway.com
        ssl_certificate "/etc/pki/tls/certs/letsencrypt-haymingway.com/cert.pem";  # This file needs update 
        ssl_certificate_key "/etc/pki/tls/certs/letsencrypt-haymingway.com/privkey.pem";  #This file needs update
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
        include /etc/nginx/default.d/*.conf;

#        location / {
#        }

        location / {
                      try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm/www.sock;
            fastcgi_index index.php;
            include fastcgi.conf;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
	ssl_protocols TLSv1.2 TLSv1.3;
	#rerdirect https://haymingway.com:443 --> https://www.haymingway.com:443
        #return 301 https://www.haymingway.com$request_uri;
    }

    server {
        listen       443 ssl http2;
        listen       [::]:443 ssl http2;
        server_name  www.haymingway.com;
        root         /usr/share/nginx/html;
        ssl_certificate "/etc/pki/tls/certs/letsencrypt-www.haymingway.com/cert.pem";
        ssl_certificate_key "/etc/pki/tls/certs/letsencrypt-www.haymingway.com/privkey.pem";
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
        include /etc/nginx/default.d/*.conf;

#        location / {
#        }

        location / {
                      try_files $uri $uri/ /index.php$is_args$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php-fpm/www.sock;
            fastcgi_index index.php;
            include fastcgi.conf;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }
        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }
        ssl_protocols TLSv1.2 TLSv1.3;
   }
   # ssl_certificate /etc/nginx/ssl/letsencrypt/www.theos.in/www.theos.in.cer;
   ## ssl_certificate_key /etc/nginx/ssl/letsencrypt/www.theos.in/www.theos.in.key;
   ## ssl_session_timeout 1d;
   ## ssl_session_cache shared:SSL:50m;
   ## ssl_session_tickets off;
   ## ssl_dhparam /etc/nginx/ssl/letsencrypt/theos.in/dhparams.pem;
   ## ssl_prefer_server_ciphers on;
   ## add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload always";
   ## add_header X-Content-Type-Options "nosniff always";
   ## add_header X-Frame-Options "SAMEORIGIN always";
   ## add_header X-Xss-Protection "1";
   ### OCSP Stapling
   ### fetch OCSP records from URL in ssl_certificate and cache them
   ## ssl_stapling on;
   ## ssl_stapling_verify on;
   ## #resolver <IP DNS resolver>;
   # ssl_certificate /etc/nginx/ssl/letsencrypt/www.theos.in/www.theos.in.cer;
   # ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
   # ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
   # ssl_buffer_size 8k;

}
